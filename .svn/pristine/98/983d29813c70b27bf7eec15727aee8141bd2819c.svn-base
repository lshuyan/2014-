//
//  ADOSyncDelete.m
//  ChinaBrowser
//
//  Created by David on 14/12/20.
//  Copyright (c) 2014年 KOTO Inc. All rights reserved.
//

#import "ADOSyncDelete.h"

#import "ModelSyncDelete.h"
#import "DBHelper.h"

@implementation ADOSyncDelete

/**
 *  检查是否存在该类型的 服务器id
 *
 *  @param pkidServer   pkidServer description
 *  @param syncDataType syncDataType description
 *  @param userId       userId description
 *
 *  @return BOOL
 */
+ (BOOL)isExistPkidServer:(NSInteger)pkidServer syncDataType:(SyncDataType)syncDataType userId:(NSInteger)userId
{
    return [[DBHelper db] intForQuery:@"select pkid from tab_sync_delete where user_id=? and lan=? and sync_data_type=? and pkid_server=?", @(userId), [LocalizationUtil currLanguage], @(syncDataType), @(pkidServer)]>0;
}

/**
 *  记录删除服务器项
 *
 *  @param model ModelSyncDelete 实体对象
 *
 *  @return 添加成功后的pkid
 */
+ (NSInteger)addModel:(ModelSyncDelete *)model
{
    if ([ADOSyncDelete isExistPkidServer:model.pkid_server syncDataType:model.syncDataType userId:model.userid]) {
        return -1;
    }
    
    BOOL flag = [[DBHelper db] executeUpdate:@"insert into tab_sync_delete (user_id, lan, pkid_server, sync_data_type, update_time) values (?,?,?,?,?)", @(model.userid), model.lan, @(model.pkid_server), @(model.syncDataType), @(model.updateTime)];
    if (flag) {
        return (NSInteger)[[DBHelper db] lastInsertRowId];
    }
    else {
        return -1;
    }
}

/**
 *  删除一条数据
 *
 *  @param pkid pkid description
 *
 *  @return BOOL 是否删除成功
 */
+ (BOOL)deleteWithPkid:(NSInteger)pkid
{
    return [[DBHelper db] executeUpdate:@"delete from tab_sync_delete where pkid=?", @(pkid)];
}

+ (BOOL)deleteWithArrPkid:(NSArray *)arrPkid
{
    NSString *pkids = [arrPkid componentsJoinedByString:@","];
    if (pkids.length<=0) {
        return YES;
    }
    
    NSString *sqlDelete = [NSString stringWithFormat:@"delete from tab_sync_delete where pkid in (%@)", pkids];
    return [[DBHelper db] executeUpdate:sqlDelete];
}

/**
 *  删除一条数据
 *
 *  @param pkidServer   服务器数据id
 *  @param syncDateType 同步数据类型
 *  @param userId       用户id
 *
 *  @return BOOL 是否删除成功
 */
+ (BOOL)deleteWithPkidServer:(NSInteger)pkidServer syncDataType:(SyncDataType)syncDateType userId:(NSInteger)userId
{
    return [[DBHelper db] executeUpdate:@"delete from tab_sync_delete where pkid_server=? and sync_data_type=? and user_id=? and lan=?", @(pkidServer), @(syncDateType), @(userId), [LocalizationUtil currLanguage]];
}

/**
 *  查询指定用户的制定的数据类型 已删除pkidServer 拼接的字符串，多个使用英文逗号隔开
 *
 *  @param syncDateType syncDateType description
 *  @param userId       userId description
 *
 *  @return NSArray [NSString]
 */
+ (NSString *)queryPkidServerStringWithSyncDataType:(SyncDataType)syncDateType userId:(NSInteger)userId
{
    NSArray *arrPkidServer = [ADOSyncDelete queryPkidServerWithSyncDataType:syncDateType userId:userId];
    return [arrPkidServer componentsJoinedByString:@","];
}

+ (ModelSyncDelete *)queryWithPKidServer:(NSInteger)pkidServer syncDataType:(SyncDataType)syncDateType userId:(NSInteger)userId
{
    FMResultSet *resultSet = [[DBHelper db] executeQuery:@"select * from tab_sync_delete where pkid_server=? and sync_data_type=? and user_id=? and lan=?", @(pkidServer), @(syncDateType), @(userId), [LocalizationUtil currLanguage]];
    ModelSyncDelete *model = nil;
    while ([resultSet next]) {
        model = [ModelSyncDelete modelWithResultSetDict:[resultSet resultDictionary]];
    }
    return model;
}

/**
 *  查询指定用户的制定的数据类型 已删除pkidServer 数组
 *
 *  @param syncDateType syncDateType description
 *  @param userId       userId description
 *
 *  @return NSArray [NSString]
 */
+ (NSArray *)queryPkidServerWithSyncDataType:(SyncDataType)syncDateType userId:(NSInteger)userId
{
    FMResultSet *resultSet = [[DBHelper db] executeQuery:@"select pkid_server from tab_sync_delete where sync_data_type=? and user_id=? and lan=?", @(syncDateType), @(userId), [LocalizationUtil currLanguage]];
    NSMutableArray *arrPkidServer = [NSMutableArray array];
    while ([resultSet next]) {
        [arrPkidServer addObject:[resultSet resultDictionary][@"pkid_server"]];
    }
    return arrPkidServer;
}

+ (NSArray *)queryWithSyncDataType:(SyncDataType)syncDateType userId:(NSInteger)userId
{
    FMResultSet *resultSet = [[DBHelper db] executeQuery:@"select * from tab_sync_delete where sync_data_type=? and user_id=? and lan=?", @(syncDateType), @(userId), [LocalizationUtil currLanguage]];
    NSMutableArray *arrModel = [NSMutableArray array];
    while ([resultSet next]) {
        ModelSyncDelete *model = [ModelSyncDelete modelWithResultSetDict:[resultSet resultDictionary]];
        [arrModel addObject:model];
    }
    return arrModel;
}

@end
