//
//  ADOModeProgram.m
//  ChinaBrowser
//
//  Created by David on 14/11/22.
//  Copyright (c) 2014年 KOTO Inc. All rights reserved.
//

#import "ADOModeProgram.h"

#import "DBHelper.h"
#import "ModelModeProgram.h"
#import "ModelProgram.h"

@implementation ADOModeProgram

/**
 *  检查本地数据是否存有指定的服务器id数据
 *
 *  @param pkidServer 服务器 模式-节目表 pkid
 *
 *  @return BOOL
 */
+ (BOOL)isExistWithPkidServer:(NSInteger)pkidServer
{
    NSInteger pkid = [[DBHelper shareDBHelper].db intForQuery:@"select pkid from tab_mode_program where pkid_server=? and lan=?", @(pkidServer), [LocalizationUtil currLanguage]];
    return pkid>0;
}

/**
 *  检查某个模式下是否有有指定的节目
 *
 *  @param modePkidServer Mode.pkid_server
 *  @param programPkidServer Program.pkid_serVer
 *
 *  @return BOOL
 */
+ (BOOL)isExistWithModePkidServer:(NSInteger)modePkidServer programPkidServer:(NSInteger)programPkidServer
{
    NSInteger pkid = [[DBHelper shareDBHelper].db intForQuery:@"select pkid from tab_mode_program where mode_pkid_server=? and program_pkid_server=? and lan=?", @(modePkidServer), @(programPkidServer), [LocalizationUtil currLanguage]];
    return pkid>0;
}

/**
 *  检查某个模式下是否有有指定的节目
 *
 *  @param modePkid Mode.pkid
 *  @param programPkidServer Program.pkid_serVer
 *
 *  @return BOOL
 */
+ (BOOL)isExistWithModePkid:(NSInteger)modePkid programPkidServer:(NSInteger)programPkidServer
{
    NSInteger pkid = [[DBHelper shareDBHelper].db intForQuery:@"select pkid from tab_mode_program where mode_pkid=? and program_pkid_server=? and lan=?", @(modePkid), @(programPkidServer), [LocalizationUtil currLanguage]];
    return pkid>0;
}

/**
 *  检查某个模式下是否有有指定的节目
 *
 *  @param modePkid Mode.pkid
 *  @param programPkidServer Program.pkid_serVer
 *  @param time 时间
 *
 *  @return BOOL
 */
+ (BOOL)isExistWithModePkid:(NSInteger)modePkid programPkidServer:(NSInteger)programPkidServer time:(NSInteger)time
{
    NSInteger pkid = [[DBHelper shareDBHelper].db intForQuery:@"select pkid from tab_mode_program where mode_pkid=? and (program_pkid_server=? or time=?) and lan=?", @(modePkid), @(programPkidServer), @(time), [LocalizationUtil currLanguage]];
    return pkid>0;
}

/**
 *  添加一条数据
 *
 *  @param model ModelProgram
 *
 *  @return NSInteger pkid 添加数据的pkid
 */
+ (NSInteger)addModel:(ModelModeProgram *)model
{
    NSInteger lastInsertId = -1;
    BOOL flag = [[DBHelper shareDBHelper].db executeUpdate:@"insert into tab_mode_program (lan, pkid_server, mode_pkid, mode_pkid_server, program_pkid_server, time, repeat, is_on) values (?,?,?,?,?,?,?,?)", model.lan?:@"", @(model.pkid_server), @(model.modePkid), @(model.modePkidServer), @(model.modelProgram.pkid_server), @(model.time), @(model.repeatMode), @(model.on)];
    if (flag) {
        lastInsertId = (NSInteger)[[DBHelper shareDBHelper].db lastInsertRowId];
    }
    return lastInsertId;
}

/**
 *  更新指定数据的提醒时间
 *
 *  @param time 提醒时间(时间戳)
 *  @param pkid
 *
 *  @return BOOL
 */
+ (BOOL)updateTime:(NSInteger)time withPkid:(NSInteger)pkid
{
    return [[DBHelper shareDBHelper].db executeUpdate:@"update tab_mode_program set time=? where pkid=?", @(time), @(pkid)];
}

/**
 *  修改指定数据的提醒重复方式
 *
 *  @param repeatMode 重复方式
 *  @param pkid
 *
 *  @return BOOL
 */
+ (BOOL)updateRepeatMode:(RemindRepeatMode)repeatMode withPkid:(NSInteger)pkid
{
    return [[DBHelper shareDBHelper].db executeUpdate:@"update tab_mode_program set repeat=? where pkid=?", @(repeatMode), @(pkid)];
}

/**
 *  修改指定数据的开启状态
 *
 *  @param on   是否开启
 *  @param pkid
 *
 *  @return BOOL
 */
+ (BOOL)updateOn:(BOOL)on withPkid:(NSInteger)pkid
{
    return [[DBHelper shareDBHelper].db executeUpdate:@"update tab_mode_program set is_on=? where pkid=?", @(on), @(pkid)];
}

+ (BOOL)updateProgramPkidServer:(NSInteger)programPkidServer withPkid:(NSInteger)pkid
{
    return [[DBHelper shareDBHelper].db executeUpdate:@"update tab_mode_program set program_pkid_server=? where pkid=?", @(programPkidServer), @(pkid)];
}

/**
 *  修改指定数据的：重复模式，提醒时间，开启状态
 *
 *  @param repeatMode
 *  @param time
 *  @param on
 *  @param pkid
 *
 *  @return BOOL
 */
+ (BOOL)updateRepeatMode:(RemindRepeatMode)repeatMode time:(NSInteger)time on:(BOOL)on withPkid:(NSInteger)pkid
{
    return [[DBHelper shareDBHelper].db executeUpdate:@"update tab_mode_program set repeat=?, time=?, is_on=? where pkid=?", @(repeatMode), @(time), @(on), @(pkid)];
}

/**
 *  修改指定数据的：重复模式，开启状态
 *
 *  @param repeatMode
 *  @param on
 *  @param pkid
 *
 *  @return BOOL
 */
+ (BOOL)updateRepeatMode:(RemindRepeatMode)repeatMode on:(BOOL)on withPkid:(NSInteger)pkid
{
    return [[DBHelper shareDBHelper].db executeUpdate:@"update tab_mode_program set repeat=?, is_on=? where pkid=?", @(repeatMode), @(on), @(pkid)];
}

/**
 *  查找指定的一条数据
 *
 *  @param pkid
 *
 *  @return ModelProgram
 */
+ (ModelModeProgram *)queryWithPkid:(NSInteger)pkid
{
    ModelModeProgram *model = nil;
    FMResultSet *set = [[DBHelper shareDBHelper].db executeQuery:@"select * from tab_mode_program where pkid = ?", @(pkid)];
    while ([set next]) {
        model= [ModelModeProgram modelWithResultSetDict:[set resultDictionary]];
        break;
    }
    return model;
}

+ (ModelModeProgram *)queryWithModePkid:(NSInteger)modePkid programPkidServer:(NSInteger)programPkidServer time:(NSInteger)time
{
    ModelModeProgram *model = nil;
    FMResultSet *set = [[DBHelper shareDBHelper].db executeQuery:@"select * from tab_mode_program where mode_pkid=? and (program_pkid_server=? or time=?) and lan=?", @(modePkid), @(programPkidServer), @(time), [LocalizationUtil currLanguage]];
    while ([set next]) {
        model= [ModelModeProgram modelWithResultSetDict:[set resultDictionary]];
        break;
    }
    return model;
}

+ (ModelModeProgram *)queryWithModePkid:(NSInteger)modePkid programPkidServer:(NSInteger)programPkidServer
{
    ModelModeProgram *model = nil;
    FMResultSet *set = [[DBHelper shareDBHelper].db executeQuery:@"select * from tab_mode_program where mode_pkid=? and program_pkid_server=? and lan=?", @(modePkid), @(programPkidServer), [LocalizationUtil currLanguage]];
    while ([set next]) {
        model= [ModelModeProgram modelWithResultSetDict:[set resultDictionary]];
        break;
    }
    return model;
}

+ (ModelModeProgram *)queryWithModePkid:(NSInteger)modePkid programPkidServer:(NSInteger)programPkidServer time:(NSInteger)time exceptPkid:(NSInteger)pkid
{
    ModelModeProgram *model = nil;
    FMResultSet *set = [[DBHelper shareDBHelper].db executeQuery:@"select * from tab_mode_program where mode_pkid=? and program_pkid_server=? and pkid<>? and lan=?", @(modePkid), @(programPkidServer), @(pkid), [LocalizationUtil currLanguage]];
    while ([set next]) {
        model= [ModelModeProgram modelWithResultSetDict:[set resultDictionary]];
        break;
    }
    return model;
}

/**
 *  查询指定Mode的一组数据
 *
 *  @return NSArray
 */
+ (NSArray *)queryWithModePkid:(NSInteger)modePkid
{
    NSMutableArray *arrResult = [NSMutableArray array];
    FMResultSet *set = [[DBHelper shareDBHelper].db executeQuery:@"select * from tab_mode_program where mode_pkid=? and lan=? order by time asc", @(modePkid), [LocalizationUtil currLanguage]];
    while ([set next]) {
        ModelModeProgram *model = [ModelModeProgram modelWithResultSetDict:[set resultDictionary]];
        [arrResult addObject:model];
    }
    return arrResult;
}

/**
 *  根据条件 查询指定Mode的一组数据
 *
 *  @param modePkid modePkid
 *  @param on       是否启用
 *
 *  @return NSArray
 */
+ (NSArray *)queryWithModePkid:(NSInteger)modePkid on:(BOOL)on
{
    NSMutableArray *arrResult = [NSMutableArray array];
    FMResultSet *set = [[DBHelper shareDBHelper].db executeQuery:@"select * from tab_mode_program where mode_pkid=? and is_on =? and lan=? order by time asc", @(modePkid), @(on), [LocalizationUtil currLanguage]];
    while ([set next]) {
        ModelModeProgram *model = [ModelModeProgram modelWithResultSetDict:[set resultDictionary]];
        [arrResult addObject:model];
    }
    return arrResult;
}

/**
 *  删除一条数据
 *
 *  @param pkid
 *
 *  @return BOOL
 */
+ (BOOL)deleteWithPkid:(NSInteger)pkid
{
    return [[DBHelper shareDBHelper].db executeUpdate:@"delete from tab_mode_program where pkid=?", @(pkid)];
}

/**
 *  删除一条数据
 *
 *  @param pkidServer
 *
 *  @return BOOL
 */
+ (BOOL)deleteWithPkidServer:(NSInteger)pkidServer
{
    return [[DBHelper shareDBHelper].db executeUpdate:@"delete from tab_mode_program where pkid_server=? and lan=?", @(pkidServer), [LocalizationUtil currLanguage]];
}

/**
 *  删除一条数据
 *
 *  @param modePkid modePkid description
 *
 *  @return BOOL
 */
+ (BOOL)deleteWithModePkid:(NSInteger)modePkid
{
    return [[DBHelper shareDBHelper].db executeUpdate:@"delete from tab_mode_program where mode_pkid=? and lan=?", @(modePkid), [LocalizationUtil currLanguage]];
}

/**
 *  清空数据表
 *
 *  @return BOOL
 */
+ (BOOL)clear
{
    return [[DBHelper shareDBHelper].db executeUpdate:@"delete from tab_mode_program where lan=?", [LocalizationUtil currLanguage]];
}

@end
