//
//  AppDelegate.m
//  ChinaBrowser
//
//  Created by David on 14-8-30.
//  Copyright (c) 2014年 KOTO Inc. All rights reserved.
//

#import "AppDelegate.h"

#import "CheckVersion.h"

#import <ShareSDK/ShareSDK.h>
#import "WXApi.h"
#import <TencentOpenAPI/QQApiInterface.h>
#import <TencentOpenAPI/TencentOAuth.h>
#import <GoogleOpenSource/GoogleOpenSource.h>
#import <GooglePlus/GooglePlus.h>

#import "DBHelper.h"
#import "CBAudioPlayer.h"

@interface AppDelegate () <WXApiDelegate>

@end

@implementation AppDelegate
{
}

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
    application.keyWindow.backgroundColor = [UIColor whiteColor];
    
    [self setup];

    return YES;
}

- (void)applicationWillResignActive:(UIApplication *)application
{
    // Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.
    // Use this method to pause ongoing tasks, disable timers, and throttle down OpenGL ES frame rates. Games should use this method to pause the game.
}

- (void)applicationDidEnterBackground:(UIApplication *)application
{
    // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later. 
    // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.
    [application beginReceivingRemoteControlEvents];
}

- (void)applicationWillEnterForeground:(UIApplication *)application
{
    // Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.
    [application endReceivingRemoteControlEvents];
}

- (void)applicationDidBecomeActive:(UIApplication *)application
{
    // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.
}

- (void)applicationWillTerminate:(UIApplication *)application
{
    // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.
}

- (NSUInteger)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(UIWindow *)window
{
    if ([RotateUtil shareRotateUtil].rotateLock) {
        return [RotateUtil shareRotateUtil].interfaceOrientationMask;
    }
    else {
        return UIInterfaceOrientationMaskLandscape|UIInterfaceOrientationMaskPortrait;
    }
}

- (BOOL)application:(UIApplication *)application
      handleOpenURL:(NSURL *)url
{
    return [ShareSDK handleOpenURL:url
                        wxDelegate:self];
}

- (BOOL)application:(UIApplication *)application
            openURL:(NSURL *)url
  sourceApplication:(NSString *)sourceApplication
         annotation:(id)annotation
{
    return [ShareSDK handleOpenURL:url
                 sourceApplication:sourceApplication
                        annotation:annotation
                        wxDelegate:self];
}

- (void)remoteControlReceivedWithEvent:(UIEvent *)event {
    
    if(event.type== UIEventTypeRemoteControl)  {
        
        NSLog(@"Remote Control Type: %d", event.subtype);
        
        switch (event.subtype) {
            case UIEventSubtypeRemoteControlTogglePlayPause:
            case UIEventSubtypeRemoteControlPlay:
            case UIEventSubtypeRemoteControlPause:
            {
                if ([CBAudioPlayer isPlaying]) {
                    [CBAudioPlayer pause];
                }
                else {
                    [CBAudioPlayer play];
                }
            }break;
            case UIEventSubtypeRemoteControlStop:
            {
                [CBAudioPlayer stop];
            }break;
            case UIEventSubtypeRemoteControlNextTrack:
                break;
            case UIEventSubtypeRemoteControlPreviousTrack:
                break;
            default:
                break;
        }
    }
}

#pragma mark - WXApiDelegate
-(void) onReq:(BaseReq*)req
{
    
}

-(void) onResp:(BaseResp*)resp
{
    
}

- (void)setup
{
    [DBHelper shareDBHelper];
    [AppSetting init];
    if ([AppSetting shareAppSetting].desktopStyle<DesktopStyleCol2) {
        [AppSetting shareAppSetting].desktopStyle = DesktopStyleDefault;
    }
    
    [AFJSONRequestOperation addAcceptableContentTypes:[NSSet setWithObjects:
                                                       @"application/json",
                                                       @"text/json",
                                                       @"text/html",
                                                       nil]];
    
    [[AFNetworkActivityIndicatorManager sharedManager] setEnabled:NO];
    [SVProgressHUD setBackgroundColor:[kBgColorNav colorWithAlphaComponent:0.9]];
    [SVProgressHUD setForegroundColor:[UIColor colorWithWhite:1 alpha:1]];
    
    [CheckVersion checkVersionAtLaunch:YES];
    
    [ShareSDK registerApp:SSK_AppId_ShareSDK];
    //导入微信需要的外部库类型，如果不需要微信分享可以不调用此方法
    [ShareSDK importWeChatClass:[WXApi class]];
    //导入QQ互联和QQ好友分享需要的外部库类型，如果不需要QQ空间SSO和QQ好友分享可以不调用此方法
    [ShareSDK importQQClass:[QQApiInterface class]
            tencentOAuthCls:[TencentOAuth class]];
    //导入QQ互联和QQ好友分享需要的外部库类型，如果不需要QQ空间SSO和QQ好友分享可以不调用此方法
    [ShareSDK importQQClass:[QQApiInterface class]
            tencentOAuthCls:[TencentOAuth class]];
    [ShareSDK importGooglePlusClass:[GPPSignIn class]
                         shareClass:[GPPShare class]];
    
    
    NSLog(@"%d", [UIApplication sharedApplication].keyWindow==_window);
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [[BrightnessUtil shareBrightnessUtil] setBrightness:[AppSetting shareAppSetting].brightness];
    });
}

@end
