//
//  UIViewPopShareOption.m
//  ChinaBrowser
//
//  Created by David on 14/11/20.
//  Copyright (c) 2014年 KOTO Inc. All rights reserved.
//

#import "UIViewPopShareOption.h"

#import "UIControlItem.h"
#import "ModelSNSItem.h"

#define kItemW (60.0f)
#define kItemH (80.0f)
#define kPaddingLR (15.0)
#define kMinSpaceX (10.0f)
#define kSpaceY (10.0f)
#define kPaddingTB (10.0f)

#define kSpaceContent (10.0f)

@implementation UIViewPopShareOption
{
    UIView *_viewTBContain;
    UIButton *_btnSave;
    
    NSArray *_arrShareItem;
    NSArray *_arrViewItem;
    
    ShareOptionStyle _style;
    NSInteger _iColCount;
    CGFloat _fSpaceX;
    CGFloat _fContentWidth;
}

- (void)awakeFromNib
{
    [super awakeFromNib];
    _style = ShareOptionStyleDefault;
    
    NSMutableArray *arrItem = [NSMutableArray arrayWithArray:[AppSetting shareAppSetting].arrShareItem];
    
#if _DEBUG
    ModelSNSItem *model = [ModelSNSItem model];
    model.shareType = ShareTypeCopy;
    [arrItem addObject:model];
    
    model = [ModelSNSItem model];
    model.shareType = ShareTypeSMS;
    [arrItem addObject:model];
    
    model = [ModelSNSItem model];
    model.shareType = ShareTypeMail;
    [arrItem addObject:model];
#endif
    
    _arrShareItem = arrItem;
}

+ (instancetype)viewFromXibWithStyle:(ShareOptionStyle)style
{

    UIViewPopShareOption *viewPop;
    switch (style) {
        case ShareOptionStyleDefault:
        {
            viewPop = [UIViewPopShareOption viewFromXib];
        }break;
        case ShareOptionStyleScreenshot:
        {
            viewPop = [[NSBundle mainBundle] loadNibNamed:@"UIViewPopShareOption" owner:nil options:nil][0];
        }break;
            
        default:
            break;
    }

    [viewPop setShareOptionStyle:style];
    return viewPop;
}

- (void)setFrame:(CGRect)frame
{
    [super setFrame:frame];
    
    [self resizeItem];
}

- (void)showInView:(UIView *)view completion:(void (^)())completion
{
    self.frame = view.bounds;
    self.backgroundColor = [UIColor clearColor];
    
    if (_arrShareItem.count>0) {
        [self createShareItem];
        
        self.viewContent.transform = CGAffineTransformMakeTranslation(0, self.viewContent.height);
    }
    else {
        self.viewContent.hidden = YES;
    }

    [view addSubview:self];
    [UIView animateWithDuration:0.3 delay:0 options:UIViewAnimationOptionCurveEaseInOut animations:^{
        self.backgroundColor = [UIColor colorWithWhite:0.1 alpha:0.3];
        if (_arrShareItem.count>0) {
            self.viewContent.transform = CGAffineTransformIdentity;
        }
    } completion:^(BOOL finished) {
        if (completion) {
            completion();
        }
        
        if (_arrShareItem.count<=0) {
            [SVProgressHUD showWithMaskType:SVProgressHUDMaskTypeClear];
            
            /**
             *  下载分享选项数据
             */
            [AppSetting fetchShareItemWithCompletion:^{
                [SVProgressHUD dismiss];
                
                _arrShareItem = [AppSetting shareAppSetting].arrShareItem;
                [self createShareItem];
                self.viewContent.transform = CGAffineTransformMakeTranslation(0, self.viewContent.height);
                self.viewContent.hidden = NO;
                
                [UIView animateWithDuration:0.3 animations:^{
                    self.viewContent.transform = CGAffineTransformIdentity;
                }];
            }];;
        }
    }];
}

- (void)onTouchShareItem:(UIControlItem *)item
{
    [self dismissWithCompletion:^{
        if (_callbackSelectShareType) {
            ModelSNSItem *model = _arrShareItem[item.tag];
            _callbackSelectShareType(model.shareType);
        }
    }];
}

- (void)onTouchSaveImage
{
    [self dismissWithCompletion:^{
        if (_callbackSelectSaveImage) {
            _callbackSelectSaveImage();
        }
    }];
}

// ---------------------------
- (void)setShareOptionStyle:(ShareOptionStyle)style
{
    _style = style;
    if (ShareOptionStyleScreenshot==_style) {
        _viewTBContain = [[UIView alloc] initWithFrame:self.viewContent.bounds];
        [_viewTBContain addSubview:self.viewTop];
        [_viewTBContain addSubview:self.viewBottom];
        [self.viewContent addSubview:_viewTBContain];
        
        _btnSave = [[UIButton alloc] initWithFrame:CGRectMake(0, self.viewContent.height-40.0f, self.viewContent.width, 40.0f)];
        [_btnSave setTitle:LocalizedString(@"baocuntupian") forState:UIControlStateNormal];
        [_btnSave addTarget:self action:@selector(onTouchSaveImage) forControlEvents:UIControlEventTouchUpInside];
        [_btnSave setTitleColor:[[UIColor redColor] colorByMultiplyingBy:0.7] forState:UIControlStateNormal];
        [_btnSave setTitleColor:[UIColor colorWithWhite:0.33 alpha:1] forState:UIControlStateHighlighted];
        [self.viewContent addSubview:_btnSave];
        
        _viewTBContain.layer.cornerRadius =
        _btnSave.layer.cornerRadius = 8;
        
        _viewTBContain.clipsToBounds =
        _btnSave.clipsToBounds = YES;
        
        self.viewContent.backgroundColor = [UIColor clearColor];
        _viewTBContain.backgroundColor =
        _btnSave.backgroundColor = [UIColor whiteColor];
    }
    else {
        self.viewContent.backgroundColor = [UIColor whiteColor];
    }
}

- (void)createShareItem
{
    _iColCount = [self getColCount];
    if (_iColCount>=2) {
        _fSpaceX = (_fContentWidth-(kPaddingLR*2)-_iColCount*kItemW)/(_iColCount-1);
    }
    
    NSMutableArray *arrViewItem = [NSMutableArray arrayWithCapacity:_arrShareItem.count];
    for (NSInteger i=0; i<_arrShareItem.count; i++) {
        ModelSNSItem *model = _arrShareItem[i];
        
        UIControlItem *viewShareItem = [UIControlItem viewFromXibWithType:ControlItemTypeShare];
        viewShareItem.tag = i;
        viewShareItem.frame = [self frameAtIndex:i];
        viewShareItem.labelTitle.text = SNSNameWithShareType(model.shareType);
        viewShareItem.imageViewIcon.image = SNSIconWithShareType(model.shareType, YES);
        viewShareItem.imageViewIcon.contentMode = UIViewContentModeCenter;
        [viewShareItem setBgColorNormal:[UIColor clearColor] highlighted:[UIColor colorWithWhite:0 alpha:0]];
        UIColor *color = [UIColor darkGrayColor];
        [viewShareItem setTextColorNormal:color highlighted:[UIColor grayColor]];
        [viewShareItem addTarget:self action:@selector(onTouchShareItem:) forControlEvents:UIControlEventTouchUpInside];
        [self.viewBottom addSubview:viewShareItem];
        [arrViewItem addObject:viewShareItem];
    }
    _arrViewItem = arrViewItem;
    
    CGFloat bottomHeight = self.viewBottom.height;
    if (_arrViewItem.count>0) {
        UIControlItem *viewShareItem = [_arrViewItem lastObject];
        bottomHeight = viewShareItem.bottom+kPaddingTB;
    }
    
    if (ShareOptionStyleDefault==_style) {
        CGRect rc = self.viewBottom.frame;
        rc.origin = CGPointMake(0, self.viewTop.bottom);
        rc.size.width = self.width;
        rc.size.height = bottomHeight;
        self.viewBottom.frame = rc;
        
        rc.size.width = self.viewBottom.width;
        rc.origin.x = (self.width-rc.size.width)*0.5;
        rc.size.height = self.viewBottom.bottom;
        rc.origin.y = self.height-rc.size.height;
        self.viewContent.frame = rc;
    }
    else {
        CGRect rc = self.viewBottom.frame;
        rc.origin = CGPointMake(0, self.viewTop.bottom);
        rc.size.width = self.width-kSpaceContent*2;
        rc.size.height = bottomHeight;
        self.viewBottom.frame = rc;
        
        rc.origin = CGPointMake(kSpaceContent, 0);
        rc.size = CGSizeMake(self.viewBottom.width, self.viewBottom.bottom);
        _viewTBContain.frame = rc;
        
        rc = _btnSave.frame;
        rc.origin = CGPointMake(_viewTBContain.left, _viewTBContain.bottom+kSpaceContent);
        rc.size.width = _viewTBContain.width;
        _btnSave.frame = rc;
        
        rc.size = CGSizeMake(self.width, _btnSave.bottom+kSpaceContent);
        rc.origin = CGPointMake(0, self.height-rc.size.height);
        self.viewContent.frame = rc;
    }
}

/**
 *  计算允许容纳的最大列数
 *
 *  @return NSInteger 列数
 */
- (NSInteger)getColCount
{
    // 默认按横屏允许的最小宽高计算列数
    CGFloat baseMinItemWidth = kItemW;
    CGFloat w = kPaddingLR+baseMinItemWidth;
    NSInteger colCount = 0;
    _fContentWidth = self.width;
    if (ShareOptionStyleScreenshot==_style) {
        _fContentWidth -= kSpaceContent*2;
    }
    while (w+kPaddingLR<=_fContentWidth) {
        colCount++;
        w+=baseMinItemWidth+kMinSpaceX;
    }
    return colCount;
}

/**
 *  计算某项的frame
 *
 *  @param index 索引
 *
 *  @return CGRect
 */
- (CGRect)frameAtIndex:(NSInteger)index
{
    NSInteger col = GetColWithIndexCol(index, _iColCount);
    NSInteger row = GetRowWithIndexCol(index, _iColCount);
    CGRect rc = CGRectMake(kPaddingLR+(kItemW+_fSpaceX)*col,
                           kPaddingTB+(kItemH+kSpaceY)*row,
                           kItemW,
                           kItemH);
    return rc;
}

- (void)resizeItem
{
    _iColCount = [self getColCount];
    if (_iColCount>=2) {
        _fSpaceX = (_fContentWidth-(kPaddingLR*2)-_iColCount*kItemW)/(_iColCount-1);
    }
    
    for (NSInteger i=0; i<_arrViewItem.count; i++) {
        UIControlItem *viewShareItem = _arrViewItem[i];
        viewShareItem.frame = [self frameAtIndex:i];
    }
    
    CGRect rc = CGRectMake(0, self.viewTop.bottom, self.width, self.viewBottom.height);
    if (_arrViewItem.count>0) {
        UIControlItem *viewShareItem = [_arrViewItem lastObject];
        rc.size.height = viewShareItem.bottom+kPaddingTB;
    }
    
    self.viewBottom.frame = rc;
    rc = self.viewContent.frame;
    rc.origin.x = 0;
    rc.size.width = self.width;
    rc.size.height = self.viewBottom.bottom;
    rc.origin.y = self.height-rc.size.height;
    self.viewContent.frame = rc;
}

@end
