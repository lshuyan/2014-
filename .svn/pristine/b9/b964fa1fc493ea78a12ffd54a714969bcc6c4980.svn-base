//
//  ADOUserSettings.m
//  ChinaBrowser
//
//  Created by David on 14/11/24.
//  Copyright (c) 2014å¹´ KOTO Inc. All rights reserved.
//

#import "ADOUserSettings.h"

#import "DBHelper.h"
#import "ModelUserSettings.h"

@implementation ADOUserSettings

+ (BOOL)isExistWithUserId:(NSInteger)userId
{
    NSInteger pkid = [[DBHelper shareDBHelper].db intForQuery:@"select pkid from tab_user_settings where user_id=?", @(userId)];
    return pkid>0;
}

+ (BOOL)isExistWithPkidServer:(NSInteger)pkidServer
{
    NSInteger pkid = [[DBHelper shareDBHelper].db intForQuery:@"select pkid from tab_user_settings where pkid_server=?", @(pkidServer)];
    return pkid>0;
}

+ (NSInteger)addModel:(ModelUserSettings *)model
{
    NSInteger lastInsertId = -1;
    if ([ADOUserSettings isExistWithUserId:model.userid]) {
        return lastInsertId;
    }
    
    BOOL flag = [[DBHelper shareDBHelper].db executeUpdate:@"insert into tab_user_settings (pkid_server, user_id, sync_bookmark, sync_lastvisit, sync_reminder) values (?,?,?,?,?,?)", @(model.pkid_server), @(model.userid), @(model.syncBookmark), @(model.syncLastVisit), @(model.syncReminder)];
    if (flag) {
        lastInsertId = (NSInteger)[[DBHelper shareDBHelper].db lastInsertRowId];
    }
    return lastInsertId;
}

+ (BOOL)updateModel:(ModelUserSettings *)model
{
    return [[DBHelper shareDBHelper].db executeUpdate:@"update tab_user_settings set sync_bookmark=?, sync_lastvisit=?, sync_reminder=? where user_id=?", @(model.syncBookmark), @(model.syncLastVisit), @(model.syncReminder), @(model.userid)];
}

+ (ModelUserSettings *)queryWithPkid:(NSInteger)pkid;
{
    ModelUserSettings *model = nil;
    FMResultSet *set = [[DBHelper shareDBHelper].db executeQuery:@"select * from tab_user_settings where pkid = ?", @(pkid)];
    while ([set next]) {
        model= [ModelUserSettings modelWithResultSetDict:[set resultDictionary]];
        break;
    }
    return model;
}

+ (ModelUserSettings *)queryWithUserId:(NSInteger)userId
{
    ModelUserSettings *model = nil;
    FMResultSet *set = [[DBHelper shareDBHelper].db executeQuery:@"select * from tab_user_settings where user_id = ?", @(userId)];
    while ([set next]) {
        model= [ModelUserSettings modelWithResultSetDict:[set resultDictionary]];
        break;
    }
    return model;
}

+ (BOOL)deleteWithPkid:(NSInteger)pkid;
{
    return [[DBHelper shareDBHelper].db executeUpdate:@"delete from tab_user_settings where pkid=?", @(pkid)];
}

+ (BOOL)deleteWithUserId:(NSInteger)userId
{
    return [[DBHelper shareDBHelper].db executeUpdate:@"delete from tab_user_settings where user_id=?", @(userId)];
}

+ (BOOL)clear
{
    return [[DBHelper shareDBHelper].db executeUpdate:@"delete from tab_user_settings"];
}

@end
