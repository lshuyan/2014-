//
//  common.m
//

#import "common.h"

#import <ShareSDK/ShareSDK.h>

// -------------------------- notification
NSString * const KNotificationDidChanageDesktopStyle = @"KNotificationDidChanageDesktopStyle";

NSString * const KNotificationDidLogin = @"KNotificationDidLogin";
NSString * const KNotificationDidLogout = @"KNotificationDidLogout";
NSString * const KNotificationDidUpdateUserInfo = @"KNotificationDidUpdateUserInfo";
NSString * const KNotificationDidChangedPageStyle = @"KNotificationDidChangedPageStyle";
NSString * const KNotificationDidChangedSearchEngine = @"KNotificationDidChangedSearchEngine";
NSString * const KNotificationDidChangedFontSize = @"KNotificationDidChangedFontSize";
NSString * const KNotificationDidSyncReminder = @"KNotificationDidSyncReminder";

// -------------------------- FM local notification userinfo keys
NSString * const FMUserInfoKeyTitle = @"title";
NSString * const FMUserInfoKeyFM = @"fm";
NSString * const FMUserInfoKeyLink = @"link";
NSString * const FMUserInfoKeySrcType = @"srcType";
NSString * const FMUserInfoKeyCateId = @"cateId";
NSString * const FMUserInfoKeyModePkid = @"modePkid";
NSString * const FMUserInfoKeyModeProgramPkid = @"modeProgramPkid";
NSString * const FMUserInfoKeyProgramPkidServer = @"programPkidServer";

// -------------------------- functions
NSUInteger DeviceSystemMajorVersion() {
    static NSUInteger _deviceSystemMajorVersion = -1;
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        _deviceSystemMajorVersion = [[[[[UIDevice currentDevice] systemVersion] componentsSeparatedByString:@"."] objectAtIndex:0] intValue];
    });
    
    return _deviceSystemMajorVersion;
}

CGFloat InterfaceDegrees() {
    CGFloat degrees;
    
    switch ([UIApplication sharedApplication].statusBarOrientation) {
        case UIInterfaceOrientationPortraitUpsideDown:
            degrees = 180.0;
            break;
        case UIInterfaceOrientationLandscapeLeft:
            degrees = -90.0;
            break;
        case UIInterfaceOrientationLandscapeRight:
            degrees = 90.0;
            break;
        default: // UIInterfaceOrientationPortrait
            degrees = 0.0;
            break;
    }
    
    return degrees;
}

BOOL ShouldShowGuide()
{
    NSString *version = [[NSBundle mainBundle] objectForInfoDictionaryKey:(NSString *)kCFBundleVersionKey];
    
    NSUserDefaults *ud = [NSUserDefaults standardUserDefaults];
    id ver = [ud objectForKey:kShouldShowGuide];
    if (ver) {
        if ([ver isKindOfClass:[NSString class]]) {
            // 新版使用 版本号
            if ([version compare:ver]==NSOrderedDescending) {
                // 倒序
                return YES;
            }
            else {
                return NO;
            }
        }
        else {
            // 说明是旧版，只有旧版才是 NSNumber 类型
            return YES;
        }
    }
    else {
        return YES;
    }
}

void SetGuideVersion()
{
    NSUserDefaults *ud = [NSUserDefaults standardUserDefaults];
    NSString *version = [[NSBundle mainBundle] objectForInfoDictionaryKey:(NSString *)kCFBundleVersionKey];
    [ud setObject:version forKey:kShouldShowGuide];
    [ud synchronize];
}

/**
 *  将网页链接打开方式转成字符串
 *
 *  @param urlOpenStyle
 *
 *  @return NSString
 */
NSString * StringFromUrlOpenStyle(UrlOpenStyle urlOpenStyle)
{
    NSString *string = nil;
    switch (urlOpenStyle) {
        case UrlOpenStyleCurrent:
        {
            string = @"dangqianchuangkou";
        }break;
        case UrlOpenStyleNewTab:
        {
            string = @"xinchuangkou";
        }break;
        case UrlOpenStyleBackground:
        {
            string = @"houtai";
        }break;
        case UrlOpenStyleAuto:
        {
            string = @"wangyemoren";
        }break;
        default:
            break;
    }
    
    return LocalizedString(string);
}

NSString *SNSNameWithShareType(ShareType shareType)
{
    NSString *key = [NSString stringWithFormat:@"ShareType_%d", shareType];
    return LocalizedString(key);
}

UIImage *SNSIconWithShareType(ShareType shareType, BOOL iOS7)
{
    NSString *filepath = nil;
    if (iOS7) {
        filepath = [NSString stringWithFormat:@"Resource.bundle/Icon_7/sns_icon_%d.png", shareType];
    }
    else {
        filepath = [NSString stringWithFormat:@"Resource.bundle/Icon/sns_icon_%d.png", shareType];
    }
    return [UIImage imageWithBundleFile:filepath];
}

/**
 *  通过指定链接获得网站标签小图标
 *
 *  @param link 网址链接
 *
 *  @return 对应网站的小图标
 */
NSString *FaviconWithLink(NSString *link)
{
    NSURL *url = [NSURL URLWithString:link];
    NSString *icon = [NSString stringWithFormat:@"http://%@/favicon.ico", url.host];
    return icon;
}

/**
 *  通过指定链接获得网站 host 域名
 *
 *  @param link 网址链接
 *
 *  @return host
 */
NSString *HostWithLink(NSString *link)
{
    return [[NSURL URLWithString:link] host];
}

/**
 *  发送分享内容
 *
 *  @param shareType shareType description
 *  @param image     image description
 *  @param title     QZone、RenRen、Instapaper、WeChat、QQ
 *  @param content   Share content string.（Sina Weibo、Tencent Weibo、NetEase Weibo、Sohu Weibo、Douban、RenRen、KaiXin、YouDaoNote、Facebook、Twitter、Mail、Print、SMS、WeChat、QQ、Copy）
 *  @param url       QZone、RenRen、Instapaper、WeChat、QQ）
 */
void SendShareContent(ShareType shareType, UIImage *image, NSString *title, NSString *content, NSString *url)
{
    if (ShareTypeCopy==shareType) {
        UIPasteboard *pasteboard = [UIPasteboard generalPasteboard];
        if (url.length>0) {
            pasteboard.string = [url copy];
        }
        else if (image) {
            pasteboard.image = image;
        }
        [SVProgressHUD showSuccessWithStatus:[NSString stringWithFormat:@"%@", LocalizedString(@"lianjiehetupianyifuzhi")]];
        return;
    }
    
    id<ISSCAttachment> atta = [ShareSDK jpegImageWithImage:image quality:0.8];
    id<ISSContent> cont = [ShareSDK content:content
                             defaultContent:content
                                      image:atta
                                      title:title
                                        url:url
                                description:nil
                                  mediaType:url?SSPublishContentMediaTypeNews:SSPublishContentMediaTypeImage];
    id<ISSAuthOptions> auth = [ShareSDK authOptionsWithAutoAuth:YES
                                                  allowCallback:YES
                                                         scopes:nil
                                                  powerByHidden:YES
                                                 followAccounts:nil
                                                  authViewStyle:SSAuthViewStyleModal
                                                   viewDelegate:nil
                                        authManagerViewDelegate:nil];
    [ShareSDK shareContent:cont type:shareType authOptions:auth shareOptions:nil statusBarTips:NO result:^(ShareType type, SSResponseState state, id<ISSPlatformShareInfo> statusInfo, id<ICMErrorInfo> error, BOOL end) {
        switch (state) {
            case SSResponseStateSuccess:
            {
                [SVProgressHUD showSuccessWithStatus:[NSString stringWithFormat:@"%@:%@", SNSNameWithShareType(type), LocalizedString(@"fenxiangchenggong")]];
            }break;
            case SSResponseStateFail:
            {
                [SVProgressHUD showErrorWithStatus:[NSString stringWithFormat:@"%@:%@", SNSNameWithShareType(type), [error errorDescription]]];
            }break;
            default:
                break;
        }
    }];
}