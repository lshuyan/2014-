//
//  ADONewsStatus.m
//  ChinaBrowser
//
//  Created by David on 14/11/3.
//  Copyright (c) 2014年 KOTO Inc. All rights reserved.
//

#import "ADONewsStatus.h"

#import <sqlite3.h>
#import "ModelNewsStatus.h"

static int QueryCallback (void *result, int colCount, char **data, char **colName)
{
    NSMutableArray *arrResult = (__bridge NSMutableArray *)result;
    ModelNewsStatus *model = [ModelNewsStatus model];
    model.pkid = atoi(data[0]);
    model.newsId = atof(data[1]);
    model.read = atof(data[2]);
    [arrResult addObject:model];
    return 0;
}

@implementation ADONewsStatus

/**
 *  查询是否存在
 *
 *  @param newsId 新闻ID
 *
 *  @return BOOL
 */
+ (BOOL)isExistWithNewsId:(NSInteger)newsId
{
    BOOL bFlag = NO;
   
    NSString *sql = [NSString stringWithFormat:@"select * from tab_news_status where newsid=%d", newsId];
    const char *filename = [GetDBPathWithName(DB_NAME) UTF8String];
    sqlite3 *db = nil ;
    sqlite3_callback callback = QueryCallback;
    NSMutableArray *arrResult = [NSMutableArray array];
    char *msg = nil;
    do {
        if (SQLITE_OK!=sqlite3_open(filename, &db))
            break;
        if (SQLITE_OK!=sqlite3_exec(db, [sql UTF8String], callback, (__bridge void*)arrResult, &msg))
            break;
    } while (NO);
    
    if (msg) sqlite3_free(msg);
    if (db) sqlite3_close(db);
    
    bFlag = arrResult.count>0;
    
    return bFlag;
}

/**
 *  查询是否已读
 *
 *  @param newsId 新闻ID
 *
 *  @return BOOL
 */
+ (BOOL)isReadWithNewsId:(NSInteger)newsId
{
    BOOL bFlag = NO;
    
    NSString *sql = [NSString stringWithFormat:@"select * from tab_news_status where newsid=%d", newsId];
    const char *filename = [GetDBPathWithName(DB_NAME) UTF8String];
    sqlite3 *db = nil ;
    sqlite3_callback callback = QueryCallback;
    NSMutableArray *arrResult = [NSMutableArray array];
    char *msg = nil;
    do {
        if (SQLITE_OK!=sqlite3_open(filename, &db))
            break;
        if (SQLITE_OK!=sqlite3_exec(db, [sql UTF8String], callback, (__bridge void*)arrResult, &msg))
            break;
    } while (NO);
    
    if (msg) sqlite3_free(msg);
    if (db) sqlite3_close(db);
    
    if (arrResult.count>0) {
        ModelNewsStatus *model = arrResult[0];
        bFlag = model.read;
    }
    else {
        bFlag = NO;
    }
    
    return bFlag;
}

/**
 *  新加一条新闻阅读状态数据，只需要newId，新加的记录 状态默认为 NO
 *
 *  @param newsId 新闻ID
 *  @param isRead 是否已读
 *
 *  @return NSInteger
 */
+ (NSInteger)addNewsStatusWithNewsId:(NSInteger)newsId isRead:(BOOL)isRead
{
    NSInteger lastInsertId = -1;
    
    if ([ADONewsStatus isExistWithNewsId:newsId]) {
        return lastInsertId;
    }
    
    NSString *sql = [NSString stringWithFormat:@"insert into tab_news_status (newsid, status) values (%d, %d)", newsId, isRead];
    const char *filename = [GetDBPathWithName(DB_NAME) UTF8String];
    sqlite3 *db = nil ;
    sqlite3_callback callback = QueryCallback;
    NSMutableArray *arrResult = [NSMutableArray array];
    char *msg = nil;
    do {
        if (SQLITE_OK!=sqlite3_open(filename, &db))
            break;
        if (SQLITE_OK!=sqlite3_exec(db, [sql UTF8String], callback, (__bridge void*)arrResult, &msg))
            break;
    } while (NO);
    
    lastInsertId = (NSInteger)sqlite3_last_insert_rowid(db);
    
    if (msg) sqlite3_free(msg);
    if (db) sqlite3_close(db);
    
    return lastInsertId;
}

/**
 *  删除新闻阅读状态
 *
 *  @param newsId 新闻ID
 *
 *  @return BOOL
 */
+ (BOOL)deleteWithNewsId:(NSInteger)newsId
{
    BOOL bFlag = NO;
    const char *filename = [GetDBPathWithName(DB_NAME) UTF8String];
    sqlite3 *db;
    const char *sql = [[NSString stringWithFormat:@"delete from tab_news_status where newsid = %d", newsId] UTF8String];
    char *msg=nil;
    do {
        if (SQLITE_OK!=sqlite3_open(filename, &db))
            break;
        if (SQLITE_OK!=sqlite3_exec(db, sql, nil, nil, &msg)) {
            break;
        }
        bFlag = YES;
    } while (NO);
    
    if (msg) sqlite3_free(msg);
    if (db) sqlite3_close(db);
    
    return bFlag;
}

/**
 *  更新阅读状态（属于扩展方法，以后可以将新闻标记为已读或未读）
 *
 *  @param newsId 新闻ID
 *  @param isRead 是否已读
 *
 *  @return BOOL
 */
+ (BOOL)updateReadStatusWithNewsId:(NSInteger)newsId isRead:(BOOL)isRead
{
    BOOL bFlag = NO;
    const char *filename = [GetDBPathWithName(DB_NAME) UTF8String];
    sqlite3 *db;
    const char *sql = [[NSString stringWithFormat:@"update tab_news_status set status=%d where newsid=%d", isRead, newsId] UTF8String];
    char *msg=nil;
    do {
        if (SQLITE_OK!=sqlite3_open(filename, &db))
            break;
        if (SQLITE_OK!=sqlite3_exec(db, sql, nil, nil, &msg)) {
            break;
        }
        bFlag = YES;
    } while (NO);
    
    if (msg) sqlite3_free(msg);
    if (db) sqlite3_close(db);
    return bFlag;
}

@end
